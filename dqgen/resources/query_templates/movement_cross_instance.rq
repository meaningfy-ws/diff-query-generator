# basic namespaces
PREFIX align: <http://knowledgeweb.semanticweb.org/heterogeneity/alignment#>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX dsv: <http://purl.org/iso25964/DataSet/Versioning#>
PREFIX eurovoc: <http://eurovoc.europa.eu/>
PREFIX euvoc: <http://publications.europa.eu/ontology/euvoc#>
PREFIX label: <http://publications.europa.eu/resource/authority/label-type/>
PREFIX lemon: <http://lemon-model.net/lemon#>
PREFIX lexinfo: <http://www.lexinfo.net/ontology/2.0/lexinfo#>
PREFIX lexvo: <http://lexvo.org/ontology#>
PREFIX oldevo: <http://eurovoc.europa.eu/schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX sd: <http://www.w3.org/ns/sparql-service-description#>
PREFIX sh: <http://purl.org/skos-history/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX skosxl: <http://www.w3.org/2008/05/skos-xl#>
PREFIX status: <http://publications.europa.eu/resource/authority/concept-status/>
PREFIX thes: <http://purl.org/iso25964/skos-thes#>
PREFIX vb: <http://art.uniroma2.it/ontologies/vocbench#>
PREFIX xhv: <http://www.w3.org/1999/xhtml/vocab#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

# Show all movements cross instances
SELECT DISTINCT ?oldInstance ?class ?oldInstancePrefLabel ?oldInstancePrefLabelLang ?newInstance
    ?newInstancePrefLabel
    ?newInstancePrefLabelLang ?property ?value ?valueLang ("{{type_of_action}}" as ?actionType)
WHERE {
          GRAPH ?versionHistoryGraph {
    # parameters
    VALUES ( ?versionHistoryGraph ?oldVersion ?newVersion ?class ?property)
     {
    ({% if versionHistoryGraph is defined and versionHistoryGraph != None %}{{ versionHistoryGraph }} {% else %}undef{% endif %}
    {% if oldVersion is defined and oldVersion != None %}{{ oldVersion }} {% else %}undef{% endif %}
    {% if newVersion is defined and newVersion != None %}{{ newVersion }} {% else %}undef{% endif %}
    {% if cls is defined and cls != None %}{{ cls }} {% else %}undef{% endif %}
    {% if prop is defined and prop != None %}{{ prop }} {% else %}undef{% endif %})
    }
# get the current and the previous version as default versions
    ?versionset dsv:currentVersionRecord/xhv:prev/dc:identifier ?previousVersion .
    ?versionset dsv:currentVersionRecord/dc:identifier ?latestVersion .
# select the versions to actually use
    BIND(coalesce(?oldVersion, ?previousVersion) AS ?oldVersionSelected)
    BIND(coalesce(?newVersion, ?latestVersion) AS ?newVersionSelected)
    # get the delta and via that the relevant graphs
        ?delta a sh:SchemeDelta ;
    sh:deltaFrom/dc:identifier ?oldVersionSelected ;
    sh:deltaTo/dc:identifier ?newVersionSelected ;
    sh:deltaFrom/sh:usingNamedGraph/sd:name ?oldVersionGraph ;
    sh:deltaTo/sh:usingNamedGraph/sd:name ?newVersionGraph ;
    dct:hasPart ?insertions ;
    dct:hasPart ?deletions .
    ?deletions a sh:SchemeDeltaDeletions ;
    sh:usingNamedGraph/sd:name ?deletionsGraph .
    ?insertions a sh:SchemeDeltaInsertions ;
    sh:usingNamedGraph/sd:name ?insertionsGraph .
    }
    # get new instance with the property and value
    GRAPH ?newVersionGraph {

    ?newInstance a ?class .
    ?newInstance ?property ?value .
    {% for lang in languages %}
    {% if preview_object_property == "" %}
    optional {
      ?newInstance {{ preview_property }} ?prefLabel{{lang|title}} .
      FILTER (lang(?prefLabel{{lang|title}}) = "{{ lang }}")
    }
    {% else %}
    optional {
      ?newInstance {{ preview_property }} ?prefLabelObj .
      ?prefLabelObj {{ preview_object_property }} ?prefLabel{{lang|title}} .
      FILTER (lang(?prefLabel{{lang|title}}) = "{{ lang }}")
    }
    {% endif %}
    {% endfor %}
    {% if languages|length > 1 %}
    {% if preview_object_property == "" %}
    {
        SELECT ?newInstance (SAMPLE (?prefLabel) as ?prefLabelRandom)
        {
            ?newInstance {{ preview_property }} ?prefLabel .
        }
        GROUP BY ?newInstance order by ?prefLabel
    }
    {% else %}
     {
        SELECT ?newInstance (SAMPLE (?prefLabel) as ?prefLabelRandom)
        {
            ?newInstance {{ preview_property }} ?prefLabelObj .
            ?prefLabelObj {{ preview_object_property }} ?prefLabel
        }
        GROUP BY ?newInstance order by ?prefLabel
     }
     {% endif %}
    BIND(COALESCE({% for lang in languages -%}
                   ?prefLabel{{lang|title}}{{ ", " }}
                   {%- endfor -%}?prefLabelRandom) as ?newInstancePrefLabel)
    {% else %}
    BIND (?prefLabel{{languages[0]|title}} AS ?newInstancePrefLabel)
    {% endif %}
     BIND (lang(?newInstancePrefLabel) as ?newInstancePrefLabelLang)
    BIND (lang(?value) AS ?valueLang )
    }
    # get all instances from the old version with the same property and value
    GRAPH ?oldVersionGraph {
    ?oldInstance a ?class .
    ?oldInstance ?property ?value .
    {% for lang in languages %}
    {% if preview_object_property == "" %}
    optional {
      ?oldInstance {{ preview_property }} ?oldPrefLabel{{lang|title}} .
      FILTER (lang(?oldPrefLabel{{lang|title}}) = "{{ lang }}")
    }
    {% else %}
    optional {
      ?oldInstance {{ preview_property }} ?prefLabelObj .
      ?prefLabelObj {{ preview_object_property }} ?oldPrefLabel{{lang|title}} .
      FILTER (lang(?oldPrefLabel{{lang|title}}) = "{{ lang }}")
    }
    {% endif %}
    {% endfor %}
    {% if languages|length > 1 %}
    {% if preview_object_property == "" %}
    {
        SELECT ?oldInstance (SAMPLE (?prefLabelRd) as ?oldInstancePrefLabelRandom)
        {
            ?oldInstance {{ preview_property }} ?prefLabelRd .
        }
        GROUP BY ?oldInstance order by ?prefLabelRd
    }
    {% else %}
     {
        SELECT ?oldInstance (SAMPLE (?prefLabelRd) as ?oldInstancePrefLabelRandom)
        {
            ?oldInstance {{ preview_property }} ?prefLabelObj .
            ?prefLabelObj {{ preview_object_property }} ?prefLabelRd
        }
        GROUP BY ?oldInstance order by ?prefLabelRd
     }
     {% endif %}
    BIND(COALESCE({% for lang in languages -%}
                   ?oldPrefLabel{{lang|title}}{{ ", " }}
                   {%- endfor -%}?oldInstancePrefLabelRandom) as ?oldInstancePrefLabel)
    {% else %}
    BIND (?oldPrefLabel{{languages[0]|title}} AS ?oldInstancePrefLabel)
    {% endif %}
     BIND (lang(?oldInstancePrefLabel) as ?oldInstancePrefLabelLang)
    }
    # the new instance shall be inserted
    GRAPH ?insertionsGraph {
    ?newInstance ?property ?value .
    }
    # the old instance shall be inserted
    GRAPH ?deletionsGraph {
    ?oldInstance ?property ?value .
    }
    FILTER( ?oldInstance != ?newInstance)
    }
ORDER BY ?newInstance